/**
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0.
 */

#include <aws/securityhub/model/MalwareType.h>
#include <aws/core/utils/HashingUtils.h>
#include <aws/core/Globals.h>
#include <aws/core/utils/EnumParseOverflowContainer.h>

using namespace Aws::Utils;


namespace Aws
{
  namespace SecurityHub
  {
    namespace Model
    {
      namespace MalwareTypeMapper
      {

        static constexpr uint32_t ADWARE_HASH = ConstExprHashingUtils::HashString("ADWARE");
        static constexpr uint32_t BLENDED_THREAT_HASH = ConstExprHashingUtils::HashString("BLENDED_THREAT");
        static constexpr uint32_t BOTNET_AGENT_HASH = ConstExprHashingUtils::HashString("BOTNET_AGENT");
        static constexpr uint32_t COIN_MINER_HASH = ConstExprHashingUtils::HashString("COIN_MINER");
        static constexpr uint32_t EXPLOIT_KIT_HASH = ConstExprHashingUtils::HashString("EXPLOIT_KIT");
        static constexpr uint32_t KEYLOGGER_HASH = ConstExprHashingUtils::HashString("KEYLOGGER");
        static constexpr uint32_t MACRO_HASH = ConstExprHashingUtils::HashString("MACRO");
        static constexpr uint32_t POTENTIALLY_UNWANTED_HASH = ConstExprHashingUtils::HashString("POTENTIALLY_UNWANTED");
        static constexpr uint32_t SPYWARE_HASH = ConstExprHashingUtils::HashString("SPYWARE");
        static constexpr uint32_t RANSOMWARE_HASH = ConstExprHashingUtils::HashString("RANSOMWARE");
        static constexpr uint32_t REMOTE_ACCESS_HASH = ConstExprHashingUtils::HashString("REMOTE_ACCESS");
        static constexpr uint32_t ROOTKIT_HASH = ConstExprHashingUtils::HashString("ROOTKIT");
        static constexpr uint32_t TROJAN_HASH = ConstExprHashingUtils::HashString("TROJAN");
        static constexpr uint32_t VIRUS_HASH = ConstExprHashingUtils::HashString("VIRUS");
        static constexpr uint32_t WORM_HASH = ConstExprHashingUtils::HashString("WORM");


        MalwareType GetMalwareTypeForName(const Aws::String& name)
        {
          uint32_t hashCode = HashingUtils::HashString(name.c_str());
          if (hashCode == ADWARE_HASH)
          {
            return MalwareType::ADWARE;
          }
          else if (hashCode == BLENDED_THREAT_HASH)
          {
            return MalwareType::BLENDED_THREAT;
          }
          else if (hashCode == BOTNET_AGENT_HASH)
          {
            return MalwareType::BOTNET_AGENT;
          }
          else if (hashCode == COIN_MINER_HASH)
          {
            return MalwareType::COIN_MINER;
          }
          else if (hashCode == EXPLOIT_KIT_HASH)
          {
            return MalwareType::EXPLOIT_KIT;
          }
          else if (hashCode == KEYLOGGER_HASH)
          {
            return MalwareType::KEYLOGGER;
          }
          else if (hashCode == MACRO_HASH)
          {
            return MalwareType::MACRO;
          }
          else if (hashCode == POTENTIALLY_UNWANTED_HASH)
          {
            return MalwareType::POTENTIALLY_UNWANTED;
          }
          else if (hashCode == SPYWARE_HASH)
          {
            return MalwareType::SPYWARE;
          }
          else if (hashCode == RANSOMWARE_HASH)
          {
            return MalwareType::RANSOMWARE;
          }
          else if (hashCode == REMOTE_ACCESS_HASH)
          {
            return MalwareType::REMOTE_ACCESS;
          }
          else if (hashCode == ROOTKIT_HASH)
          {
            return MalwareType::ROOTKIT;
          }
          else if (hashCode == TROJAN_HASH)
          {
            return MalwareType::TROJAN;
          }
          else if (hashCode == VIRUS_HASH)
          {
            return MalwareType::VIRUS;
          }
          else if (hashCode == WORM_HASH)
          {
            return MalwareType::WORM;
          }
          EnumParseOverflowContainer* overflowContainer = Aws::GetEnumOverflowContainer();
          if(overflowContainer)
          {
            overflowContainer->StoreOverflow(hashCode, name);
            return static_cast<MalwareType>(hashCode);
          }

          return MalwareType::NOT_SET;
        }

        Aws::String GetNameForMalwareType(MalwareType enumValue)
        {
          switch(enumValue)
          {
          case MalwareType::NOT_SET:
            return {};
          case MalwareType::ADWARE:
            return "ADWARE";
          case MalwareType::BLENDED_THREAT:
            return "BLENDED_THREAT";
          case MalwareType::BOTNET_AGENT:
            return "BOTNET_AGENT";
          case MalwareType::COIN_MINER:
            return "COIN_MINER";
          case MalwareType::EXPLOIT_KIT:
            return "EXPLOIT_KIT";
          case MalwareType::KEYLOGGER:
            return "KEYLOGGER";
          case MalwareType::MACRO:
            return "MACRO";
          case MalwareType::POTENTIALLY_UNWANTED:
            return "POTENTIALLY_UNWANTED";
          case MalwareType::SPYWARE:
            return "SPYWARE";
          case MalwareType::RANSOMWARE:
            return "RANSOMWARE";
          case MalwareType::REMOTE_ACCESS:
            return "REMOTE_ACCESS";
          case MalwareType::ROOTKIT:
            return "ROOTKIT";
          case MalwareType::TROJAN:
            return "TROJAN";
          case MalwareType::VIRUS:
            return "VIRUS";
          case MalwareType::WORM:
            return "WORM";
          default:
            EnumParseOverflowContainer* overflowContainer = Aws::GetEnumOverflowContainer();
            if(overflowContainer)
            {
              return overflowContainer->RetrieveOverflow(static_cast<int>(enumValue));
            }

            return {};
          }
        }

      } // namespace MalwareTypeMapper
    } // namespace Model
  } // namespace SecurityHub
} // namespace Aws
